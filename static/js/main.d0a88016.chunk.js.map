{"version":3,"sources":["components/SearchBar.tsx","components/WeatherCard.tsx","components/Favorites.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","props","state","value","warning","handleChange","bind","sendValueToParent","getWeather","event","this","setState","target","preventDefault","trim","match","callBackFromParent","callBackForGeoLocation","errorMessage","Message","error","header","content","warningMessage","className","Form","onSubmit","Input","placeholder","action","icon","onChange","size","type","autoFocus","Button","onClick","aria-hidden","React","Component","WeatherCard","saveDataToLocalStorage","deleteDataFromLocalStorage","downloadFile","existingCities","JSON","parse","localStorage","getItem","indexOfCity","indexOf","weatherData","city","splice","setItem","stringify","push","weather","country","temp","celcius","Math","round","main","byteString","window","atob","btoa","arrayBuffer","ArrayBuffer","length","int8Array","Uint8Array","i","charCodeAt","blob","Blob","navigator","msSaveOrOpenBlob","data","URL","createObjectURL","link","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","setTimeout","revokeObjectURL","remove","saveBtn","positive","deleteBtn","negative","saveFileBtn","savedCities","id","includes","Favorites","cityElements","map","App","searchDone","hasSavedCities","callWeatherData","updateSavedCities","getLocation","geolocation","getCurrentPosition","position","url","coords","latitude","longitude","fetch","then","response","ok","Error","statusText","resp","json","weatherObj","name","sys","catch","message","err","console","code","timeout","enableHighAccuracy","log","cityArr","hasCities","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gZAoFeA,E,kDAnEb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAS,GAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBATM,E,gDAY1B,SAAaG,GACXC,KAAKC,SAAS,CAAER,MAAOM,EAAMG,OAAOT,U,+BAItC,SAAkBM,GAChBA,EAAMI,iBAGwB,KAA5BH,KAAKR,MAAMC,MAAMW,QACkB,OAAnCJ,KAAKR,MAAMC,MAAMY,MAAM,QAEvBL,KAAKC,SAAS,CAAEP,SAAS,KAEzBM,KAAKT,MAAMe,mBAAmBN,KAAKR,MAAMC,OACzCO,KAAKC,SAAS,CAAEP,SAAS,O,wBAI7B,SAAWK,GACTC,KAAKT,MAAMgB,2B,oBAGb,WACE,IAAMC,EACJ,cAACC,EAAA,EAAD,CAASC,OAAK,EAACC,OAAO,qBAAqBC,QAASZ,KAAKT,MAAMmB,QAE3DG,EACJ,cAACJ,EAAA,EAAD,CAASf,SAAO,EAACiB,OAAO,kDAG1B,OACE,sBAAKG,UAAU,YAAf,UACGd,KAAKT,MAAMmB,OAASF,EACpBR,KAAKR,MAAME,SAAWmB,EACvB,cAACE,EAAA,EAAD,CAAMC,SAAUhB,KAAKH,kBAArB,SACE,cAACoB,EAAA,EAAD,CACEH,UAAU,kBACVI,YAAY,2BACZC,OAAQ,CAAEC,KAAM,UAChBC,SAAUrB,KAAKL,aACfF,MAAOO,KAAKR,MAAMC,MAClB6B,KAAK,OACLC,KAAK,OACLC,WAAS,MAGb,cAACC,EAAA,EAAD,CAAQX,UAAU,iCAAiCY,QAAS1B,KAAKF,WAAjE,SACE,mBAAG6B,cAAY,OAAOb,UAAU,iC,GA7DlBc,IAAMC,WCmHfC,G,gEAvHb,WAAYvC,GAAe,IAAD,8BACxB,cAAMA,IAEDwC,uBAAyB,EAAKA,uBAAuBnC,KAA5B,gBAC9B,EAAKoC,2BACH,EAAKA,2BAA2BpC,KAAhC,gBACF,EAAKqC,aAAe,EAAKA,aAAarC,KAAlB,gBANI,E,8DAS1B,WAGE,IAAMsC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAChEC,EAAcL,EAAeM,QAAQxC,KAAKT,MAAMkD,YAAYC,MAElER,EAAeS,OAAOJ,EAAa,GACnCF,aAAaO,QAAQ,WAAYT,KAAKU,UAAUX,IAChDlC,KAAKT,MAAMe,mBAAmB4B,K,oCAGhC,WAGE,IAAMA,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAEtEJ,EAAeY,KAAK9C,KAAKT,MAAMkD,YAAYC,MAC3CL,aAAaO,QAAQ,WAAYT,KAAKU,UAAUX,IAChDlC,KAAKT,MAAMe,mBAAmB4B,K,0BAGhC,WAUE,IATA,MAAyClC,KAAKT,MAAMkD,YAAtCM,GAAd,EAAQL,KAAR,EAAcK,SAASC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,KAC1BC,EAAUC,KAAKC,MAAMH,EAAO,QAC5BrC,EAAO,UAAMoC,EAAN,aAAkBE,EAAlB,iBAA+BH,EAAQ,GAAGM,MAEjDC,EAAaC,OAAOC,KACxBD,OAAOE,KAAK7C,IAER8C,EAAc,IAAIC,YAAYL,EAAWM,QACzCC,EAAY,IAAIC,WAAWJ,GACxBK,EAAI,EAAGA,EAAIT,EAAWM,OAAQG,IACrCF,EAAUE,GAAKT,EAAWU,WAAWD,GAGvC,IAAIE,EAAO,IAAIC,KAAK,CAACL,IAIrB,GAAIN,OAAOY,WAAaZ,OAAOY,UAAUC,iBACvCb,OAAOY,UAAUC,iBAAiBH,OADpC,CAOA,IAAMI,EAAOd,OAAOe,IAAIC,gBAAgBN,GAEpCO,EAAOC,SAASC,cAAc,KAClCF,EAAKG,KAAON,EAEZG,EAAKI,SAAW,mBAEhBJ,EAAKK,cACH,IAAIC,WAAW,QAAS,CAAEC,SAAS,EAAMC,YAAY,EAAMC,KAAM1B,UAGnE2B,YAAW,WAET3B,OAAOe,IAAIa,gBAAgBd,GAC3BG,EAAKY,WACJ,Q,oBAGL,WACE,MAAyCpF,KAAKT,MAAMkD,YAA5CC,EAAR,EAAQA,KAAMK,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,QAASC,EAAhC,EAAgCA,KAC1BC,EAAUC,KAAKC,MAAMH,EAAO,QAC5BoC,EACJ,cAAC5D,EAAA,EAAD,CACE6D,UAAQ,EACRhE,KAAK,OACLI,QAAS1B,KAAK+B,uBACdnB,QAAQ,sBAGN2E,EACJ,cAAC9D,EAAA,EAAD,CACE+D,UAAQ,EACRlE,KAAK,OACLI,QAAS1B,KAAKgC,2BACdpB,QAAQ,0BAGN6E,EACJ,cAAChE,EAAA,EAAD,CACE6D,UAAQ,EACRhE,KAAK,OACLI,QAAS1B,KAAKiC,aACdrB,QAAQ,cAGNsB,EAAiBlC,KAAKT,MAAMmG,YAElC,OACE,sBAAK5E,UAAU,cAAf,UACE,qBAAIA,UAAU,sBAAd,UAAqCoC,EAArC,UACA,sBAAKpC,UAAU,6BAAf,UACE,mBAAGA,UAAS,oBAAeiC,EAAQ,GAAG4C,GAA1B,uBACZ,4BAAI5C,EAAQ,GAAGM,UAEjB,qBAAIvC,UAAU,mBAAd,UACG4B,EADH,KACWM,KAEVd,EAAe0D,SAASlD,GAAQ6C,EAAYF,EAC5CI,S,GAlHiB7D,IAAMC,YCgCjBgE,G,yDAjCb,WAAYtG,GAAe,IAAD,8BACxB,cAAMA,IAEDO,WAAa,EAAKA,WAAWF,KAAhB,gBAHM,E,8CAM1B,SAAWG,GACTC,KAAKT,MAAMe,mBAAmBP,EAAMG,OAAOT,S,oBAG7C,WAAU,IAAD,OACHqG,EAAe9F,KAAKT,MAAMmG,YAAYK,KAAI,SAACrD,GAC7C,OACE,cAACjB,EAAA,EAAD,CACEX,UAAU,gBACVQ,KAAK,OACL7B,MAAOiD,EAEPhB,QAAS,EAAK5B,WACdc,QAAS8B,GANX,UAIUA,EAJV,eAWJ,OACE,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,gCACA,qBAAKA,UAAU,6BAAf,SAA6CgF,W,GA5B7BlE,IAAMC,YC8KfmE,E,kDA3Ib,WAAYzG,GAAa,IAAD,8BACtB,cAAMA,IAdRC,MAAQ,CACNiD,YAAa,CACXM,QAAS,GACTL,KAAM,GACNM,QAAS,GACTC,KAAM,GAERgD,YAAY,EACZP,YAAa,GACbQ,gBAAgB,EAChB1F,aAAc,IAMd,EAAK2F,gBAAkB,EAAKA,gBAAgBvG,KAArB,gBACvB,EAAKwG,kBAAoB,EAAKA,kBAAkBxG,KAAvB,gBACzB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBALG,E,+CAQxB,WAAe,IAAD,OACZuE,UAAUmC,YAAYC,oBACpB,SAACC,GAEC,IAAMC,EAAG,8DAA0DD,EAASE,OAAOC,SAA1E,gBAA0FH,EAASE,OAAOE,UAA1G,mDACTC,MAAMJ,GACHK,MAoBH,SAAsBC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,KAvBND,MAAK,SAACK,GAAD,OAAUA,EAAKC,UACpBN,MAAK,SAACzC,GACL,IAAMgD,EAAa,CACjBtE,QAASsB,EAAKtB,QACdL,KAAM2B,EAAKiD,KACXtE,QAASqB,EAAKkD,IAAIvE,QAClBC,KAAMoB,EAAKhB,KAAKJ,MAElB,EAAKhD,SAAS,CACZwC,YAAa4E,EACbpB,YAAY,EACZzF,aAAc,QAGjBgH,OAAM,SAAC9G,GAEN,EAAKT,SAAS,CAAEO,aAAcE,EAAM+G,gBAU1C,SAACC,GACCC,QAAQjH,MAAR,gBAAuBgH,EAAIE,KAA3B,cAAqCF,EAAID,YAG3C,CACEI,QAAS,IACTC,oBAAoB,M,6BAK1B,SAAgBpF,GAAe,IAAD,OAEtB+D,EAAG,4DAAwD/D,EAAxD,2CACTmE,MAAMJ,GACHK,MAsBH,SAAsBC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,KAzBND,MAAK,SAACK,GAAD,OAAUA,EAAKC,UACpBN,MAAK,SAACzC,GACL,IAAMgD,EAAa,CACjBtE,QAASsB,EAAKtB,QACdL,KAAM2B,EAAKiD,KACXtE,QAASqB,EAAKkD,IAAIvE,QAClBC,KAAMoB,EAAKhB,KAAKJ,MAElB,EAAKhD,SAAS,CACZwC,YAAa4E,EACbpB,YAAY,EACZzF,aAAc,KAGhBmH,QAAQI,IAAI,OAAQ1D,MAErBmD,OAAM,SAAC9G,GAEN,EAAKT,SAAS,CAAEO,aAAcE,EAAM+G,e,+BAW1C,SAAkBO,GAEhB,IAAMC,EAAYD,EAAQpE,OAAS,EACnC5D,KAAKC,SAAS,CAAEyF,YAAasC,EAAS9B,eAAgB+B,M,gCAGxD,WAGE,IAAI/F,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MAEtC,IAA1BJ,EAAe0B,QACjB5D,KAAKC,SAAS,CACZiG,gBAAgB,EAChBR,YAAaxD,M,oBAKnB,WACE,MAMIlC,KAAKR,MALPyG,EADF,EACEA,WACAxD,EAFF,EAEEA,YACAyD,EAHF,EAGEA,eACAR,EAJF,EAIEA,YACAlF,EALF,EAKEA,aAGF,OACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,CACER,mBAAoBN,KAAKmG,gBACzB5F,uBAAwBP,KAAKqG,YAC7B3F,MAAOF,IAERyF,GACC,cAAC,EAAD,CACExD,YAAaA,EACbiD,YAAaA,EACbpF,mBAAoBN,KAAKoG,oBAG5BF,GACC,cAAC,EAAD,CACER,YAAaA,EACbpF,mBAAoBN,KAAKmG,yB,GAjJnBtE,aChBHqG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnE,SAASoE,eAAe,SAM1BX,M","file":"static/js/main.d0a88016.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\r\nimport \"../css/SearchBar.css\";\r\n//import { Input, Message, Form } from \"semantic-ui-react\";\r\n\r\nexport interface Props {\r\n  callBackFromParent: (city: string) => void;\r\n  callBackForGeoLocation: () => void;\r\n  error: string;\r\n}\r\n\r\nexport interface State {\r\n  value: string;\r\n  warning: boolean;\r\n}\r\n\r\nclass SearchBar extends React.Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      warning: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.sendValueToParent = this.sendValueToParent.bind(this);\r\n    this.getWeather = this.getWeather.bind(this);\r\n  }\r\n\r\n  handleChange(event: any) {\r\n    this.setState({ value: event.target.value });\r\n    //this.state.value=event.target.value;\r\n  }\r\n\r\n  sendValueToParent(event: any) {\r\n    event.preventDefault();\r\n    // Check if the input field has been submitted empty or if it contains numbers\r\n    if (\r\n      this.state.value.trim() === \"\" ||\r\n      this.state.value.match(/\\d+/g) !== null\r\n    ) {\r\n      this.setState({ warning: true });\r\n    } else {\r\n      this.props.callBackFromParent(this.state.value);\r\n      this.setState({ warning: false });\r\n    }\r\n  }\r\n\r\n  getWeather(event: any) {\r\n    this.props.callBackForGeoLocation();\r\n  }\r\n\r\n  render() {\r\n    const errorMessage = (\r\n      <Message error header=\"There was an error\" content={this.props.error} />\r\n    );\r\n    const warningMessage = (\r\n      <Message warning header=\"Please check that you've entered a valid city\" />\r\n    );\r\n\r\n    return (\r\n      <div className=\"SearchBar\">\r\n        {this.props.error && errorMessage}\r\n        {this.state.warning && warningMessage}\r\n        <Form onSubmit={this.sendValueToParent}>\r\n          <Input\r\n            className=\"SearchBar-input\"\r\n            placeholder=\"Search the weather in...\"\r\n            action={{ icon: \"search\" }}\r\n            onChange={this.handleChange}\r\n            value={this.state.value}\r\n            size=\"huge\"\r\n            type=\"text\"\r\n            autoFocus\r\n          />\r\n        </Form>\r\n        <Button className=\"ui icon button location-button\" onClick={this.getWeather}>\r\n          <i aria-hidden=\"true\" className=\"location arrow icon\"></i>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/WeatherCard.css\";\r\nimport \"../css/weather-icons.min.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport interface Props {\r\n  weatherData: any;\r\n  savedCities: any[];\r\n  callBackFromParent: (cityArr: []) => void;\r\n}\r\n\r\nclass WeatherCard extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.saveDataToLocalStorage = this.saveDataToLocalStorage.bind(this);\r\n    this.deleteDataFromLocalStorage =\r\n      this.deleteDataFromLocalStorage.bind(this);\r\n    this.downloadFile = this.downloadFile.bind(this);\r\n  }\r\n\r\n  deleteDataFromLocalStorage() {\r\n    // var retrievedObject = localStorage.getItem(\"cityList\");\r\n    // const existingCities = JSON.parse(retrievedObject != null ? retrievedObject : \"\");\r\n    const existingCities = JSON.parse(localStorage.getItem(\"cityList\") || \"{}\");\r\n    const indexOfCity = existingCities.indexOf(this.props.weatherData.city);\r\n\r\n    existingCities.splice(indexOfCity, 1);\r\n    localStorage.setItem(\"cityList\", JSON.stringify(existingCities));\r\n    this.props.callBackFromParent(existingCities);\r\n  }\r\n\r\n  saveDataToLocalStorage() {\r\n    // Get data from LocalStorage if there is any and push back with new city\r\n    //const existingCities = JSON.parse(localStorage.getItem(\"cityList\")) || [];\r\n    const existingCities = JSON.parse(localStorage.getItem(\"cityList\") || \"[]\");\r\n\r\n    existingCities.push(this.props.weatherData.city);\r\n    localStorage.setItem(\"cityList\", JSON.stringify(existingCities));\r\n    this.props.callBackFromParent(existingCities);\r\n  }\r\n\r\n  downloadFile() {\r\n    const { city, weather, country, temp } = this.props.weatherData;\r\n    const celcius = Math.round(temp - 273.15);\r\n    const content = `${country}, ${celcius}°, ${weather[0].main}`;\r\n\r\n    const byteString = window.atob(\r\n      window.btoa(content)\r\n    );\r\n    const arrayBuffer = new ArrayBuffer(byteString.length);\r\n    const int8Array = new Uint8Array(arrayBuffer);\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      int8Array[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    let blob = new Blob([int8Array]);\r\n\r\n    // IE doesn't allow using a blob object directly as link href\r\n    // instead it is necessary to use msSaveOrOpenBlob\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n      window.navigator.msSaveOrOpenBlob(blob);\r\n      return;\r\n    }\r\n\r\n    // For other browsers:\r\n    // Create a link pointing to the ObjectURL containing the blob.\r\n    const data = window.URL.createObjectURL(blob);\r\n\r\n    var link = document.createElement(\"a\");\r\n    link.href = data;\r\n\r\n    link.download = \"Weather Data.txt\";\r\n    // this is necessary as link.click() does not work on the latest firefox\r\n    link.dispatchEvent(\r\n      new MouseEvent(\"click\", { bubbles: true, cancelable: true, view: window })\r\n    );\r\n\r\n    setTimeout(function () {\r\n      // For Firefox it is necessary to delay revoking the ObjectURL\r\n      window.URL.revokeObjectURL(data);\r\n      link.remove();\r\n    }, 100);\r\n  }\r\n\r\n  render() {\r\n    const { city, weather, country, temp } = this.props.weatherData;\r\n    const celcius = Math.round(temp - 273.15);\r\n    const saveBtn = (\r\n      <Button\r\n        positive\r\n        size=\"mini\"\r\n        onClick={this.saveDataToLocalStorage}\r\n        content=\"Save to favorites\"\r\n      />\r\n    );\r\n    const deleteBtn = (\r\n      <Button\r\n        negative\r\n        size=\"mini\"\r\n        onClick={this.deleteDataFromLocalStorage}\r\n        content=\"Delete from favorites\"\r\n      />\r\n    );\r\n    const saveFileBtn = (\r\n      <Button\r\n        positive\r\n        size=\"mini\"\r\n        onClick={this.downloadFile}\r\n        content=\"Save file\"\r\n      />\r\n    );\r\n    const existingCities = this.props.savedCities;\r\n\r\n    return (\r\n      <div className=\"WeatherCard\">\r\n        <h1 className=\"WeatherCard-degrees\">{celcius}°</h1>\r\n        <div className=\"WeatherCard-icon-container\">\r\n          <i className={`wi wi-owm-${weather[0].id} WeatherCard-icon`} />\r\n          <p>{weather[0].main}</p>\r\n        </div>\r\n        <h2 className=\"WeatherCard-city\">\r\n          {city}, {country}\r\n        </h2>\r\n        {existingCities.includes(city) ? deleteBtn : saveBtn}\r\n        {saveFileBtn}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React from \"react\";\r\nimport \"../css/Favorites.css\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport interface Props {\r\n  savedCities: any[];\r\n  callBackFromParent: (city: string) => void;\r\n}\r\n\r\nclass Favorites extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.getWeather = this.getWeather.bind(this);\r\n  }\r\n\r\n  getWeather(event: any) {\r\n    this.props.callBackFromParent(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    let cityElements = this.props.savedCities.map((city) => {\r\n      return (\r\n        <Button\r\n          className=\"Favorites-btn\"\r\n          size=\"tiny\"\r\n          value={city}\r\n          key={`${city}-button`}\r\n          onClick={this.getWeather}\r\n          content={city}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Favorites\">\r\n        <h3 className=\"Favorites-title\">My favorite cities</h3>\r\n        <div className=\"Favorites-button-container\">{cityElements}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar\";\nimport WeatherCard from \"./components/WeatherCard\";\nimport Favorites from \"./components/Favorites\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.tsx</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n//export default App;\n\nclass App extends Component {\n  state = {\n    weatherData: {\n      weather: \"\",\n      city: \"\",\n      country: \"\",\n      temp: 0,\n    },\n    searchDone: false,\n    savedCities: [],\n    hasSavedCities: false,\n    errorMessage: \"\",\n  };\n\n  constructor(props: any) {\n    super(props);    \n\n    this.callWeatherData = this.callWeatherData.bind(this);\n    this.updateSavedCities = this.updateSavedCities.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n  }\n\n  getLocation() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        //this.reverseGeocoding(position.coords.latitude, position.coords.longitude);\n        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=034a228bf950af8c9eef368a69f8a99d&lang=en`;\n        fetch(url)\n          .then(handleErrors)\n          .then((resp) => resp.json())\n          .then((data) => {\n            const weatherObj = {\n              weather: data.weather,\n              city: data.name,\n              country: data.sys.country,\n              temp: data.main.temp,\n            };\n            this.setState({\n              weatherData: weatherObj,\n              searchDone: true,\n              errorMessage: \"\",\n            });\n          })\n          .catch((error) => {\n            // If an error is catch, it's sent to SearchBar as props\n            this.setState({ errorMessage: error.message });\n          });\n\n        function handleErrors(response: any) {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response;\n        }\n      },\n      (err) => {\n        console.error(`ERROR(${err.code}): ${err.message}`);\n        //getCoordinatesByIP();\n      },\n      {\n        timeout: 6000,\n        enableHighAccuracy: false,\n      }\n    );\n  }\n\n  callWeatherData(city: string) {\n    //const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${API_KEY}`;\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=034a228bf950af8c9eef368a69f8a99d`;\n    fetch(url)\n      .then(handleErrors)\n      .then((resp) => resp.json())\n      .then((data) => {\n        const weatherObj = {\n          weather: data.weather,\n          city: data.name,\n          country: data.sys.country,\n          temp: data.main.temp,\n        };\n        this.setState({\n          weatherData: weatherObj,\n          searchDone: true,\n          errorMessage: \"\",\n        });\n\n        console.log(\"data\", data);\n      })\n      .catch((error) => {\n        // If an error is catch, it's sent to SearchBar as props\n        this.setState({ errorMessage: error.message });\n      });\n\n    function handleErrors(response: any) {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }\n  }\n\n  updateSavedCities(cityArr: []) {\n    // hasCities is set to true if length is more than 0, otherwise false\n    const hasCities = cityArr.length > 0;\n    this.setState({ savedCities: cityArr, hasSavedCities: hasCities });\n  }\n\n  componentWillMount() {\n    // See if there's saved cities in localStorage before the App is mounted\n    // Tests didn't like parsing when localStorage.getItem was undefined, so this was my solution for it\n    let existingCities = JSON.parse(localStorage.getItem(\"cityList\") || \"[]\");\n\n    if (existingCities.length !== 0) {\n      this.setState({\n        hasSavedCities: true,\n        savedCities: existingCities,\n      });\n    }\n  }\n\n  render() {\n    const {\n      searchDone,\n      weatherData,\n      hasSavedCities,\n      savedCities,\n      errorMessage,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar\n          callBackFromParent={this.callWeatherData}\n          callBackForGeoLocation={this.getLocation}\n          error={errorMessage}\n        />        \n        {searchDone && (\n          <WeatherCard\n            weatherData={weatherData}\n            savedCities={savedCities}\n            callBackFromParent={this.updateSavedCities}\n          />\n        )}\n        {hasSavedCities && (\n          <Favorites\n            savedCities={savedCities}\n            callBackFromParent={this.callWeatherData}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}